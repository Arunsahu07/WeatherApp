{"version":3,"sources":["Cart.jsx","App.js","actions/updatePlace.jsx","reducers/placeReducer.jsx","reducers/placeDataReducer.jsx","reducers/toggleThemeReducer.jsx","reducers/rootReducer.jsx","store.jsx","index.js"],"names":["Cart","toggle","useSelector","state","theme","info","placeData","className","location","name","src","current","condition","icon","text","temp_c","humidity","wind_kph","App","place","dispatch","useDispatch","console","log","onClick","type","onChange","e","target","value","payload","updatePlace","placeName","fetch","then","res","json","data","placeReducer","action","placeDataReducer","toggleThemeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MACe,SAASA,IACrB,IAAMC,EAASC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,SAElCC,EAAOH,aAAY,SAAAC,GAAK,OAAEA,EAAMG,aACrC,OAAO,sBAAKC,UAAS,WAAMN,EAAS,OAAS,SAAtC,cAAqDI,EAAKG,SAAW,sBAAKD,UAAS,WAAMN,EAAS,OAAS,SAAtC,UACxE,6BACGI,EAAKG,SAASC,OACf,qBAAKC,IAAKL,EAAKM,QAAQC,UAAUC,OACjC,+CAAkBR,EAAKM,QAAQC,UAAUE,QACzC,2CAAcT,EAAKM,QAAQI,OAA3B,YACA,8CAAkBV,EAAKM,QAAQK,YAC/B,0CAAaX,EAAKM,QAAQM,SAA1B,aAEK,sDCUAC,MAnBf,WACG,IAMIC,EANElB,EAASC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,SAClCgB,EAAWC,cAEXf,GADOJ,aAAc,SAACC,GAAD,OAAWA,EAAMC,SAC1BF,aAAc,SAAAC,GAAK,OAAEA,EAAMG,cAI9C,OAHCgB,QAAQC,IAAI,SAASjB,EAAWL,EAAO,WAItC,sBAAKM,UAAS,cAASN,EAAS,OAAS,SAAzC,UACE,gCACA,wBAAQM,UAAS,mBAAcN,EAAS,OAAS,SAAauB,QAAU,WAAKJ,ECOxE,CACHK,KAAO,kBDRT,SAAyGxB,EAAS,QAAU,SAC5H,uBAAQM,UAAS,WAAMN,EAAS,OAAS,SAAcyB,SAAU,SAACC,GAAMR,EAAMQ,EAAEC,OAAOC,MAAMT,ECjBlG,SAAqBD,GAEnB,MAAO,CACHM,KAAO,gBACPK,QAAUX,GDa4FY,CAAYJ,EAAEC,OAAOC,WAC5H,wBAAStB,UAAS,WAAMN,EAAS,OAAS,SAAauB,QAAU,WCXvE,IAAyBQ,EDWmDZ,GCXnDY,EDW6Eb,ECT3F,SAACC,GACJa,MAAM,oFAAD,OAAqFD,IAC7FE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACNjB,EAAS,CACLK,KAAO,oBACPK,QAAUO,WDGZ,uBACA,cAACrC,EAAD,Q,OERSsC,MATf,WACC,IADqBnC,EACtB,uDAD4B,SAAWoC,EACvC,uCACI,MAAoB,iBAAhBA,EAAOd,KAEAc,EAAOT,QAGX3B,GCHIqC,MANf,WACC,IADyBrC,EAC1B,uDADgC,GAAKoC,EACrC,uCACI,MAAoB,sBAAhBA,EAAOd,KACHc,EAAOT,QACR3B,GCKIsC,MATf,WAAoD,IAAxBtC,EAAuB,wDAARoC,EAAQ,uCAE/C,OADAjB,QAAQC,IAAI,SAASpB,GACD,iBAAhBoC,EAAOd,MAEEtB,EAENA,GCIIuC,EANKC,YAAgB,CAChCxB,MAAQmB,EACRhC,UAAYkC,EACZpC,MAAQqC,I,OCHGG,EADDC,YAAYH,EAAcI,YAAgBC,MCIxDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SAEE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.b5e620e6.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\nexport default function Cart()\r\n{  const toggle = useSelector(state=>state.theme);\r\n\r\n   const info = useSelector(state=>state.placeData);\r\n    return <div className={` ${toggle ? \"dark\" : 'light'  }`}> {info.location ? <div className={` ${toggle ? \"dark\" : 'light'  }`}>\r\n        <h1>\r\n          {info.location.name}</h1>\r\n          <img src={info.current.condition.icon} />\r\n          <div>Condition : {info.current.condition.text}</div>\r\n          <span>Temp : {info.current.temp_c} Â°C</span>\r\n          <div>Humidity : { info.current.humidity}</div>\r\n          <div>wind : {info.current.wind_kph}kmph</div>\r\n        \r\n      </div> : <div>Place not found </div>}</div>\r\n}\r\n    \r\n","\nimport './App.css';\nimport {updatePlace , updatePlaceData , toggleTheme} from './actions/updatePlace';\nimport {useSelector , useDispatch} from 'react-redux';\nimport Cart from './Cart';\nfunction App() {\n   const toggle = useSelector(state=>state.theme);\n   const dispatch = useDispatch();\n   const dark = useSelector ( (state) => state.theme  )\n   const placeData = useSelector ( state=>state.placeData)\n   console.log('data==',placeData, toggle,'=toggle');\n\n   let place ;\n  return (\n    <div className={`App ${toggle ? \"dark\" : 'light'  }`} >\n      <div  >\n      <button className={`dark-btn ${toggle ? \"dark\" : 'light'  }`} onClick={ ()=>{dispatch(toggleTheme()) }}>{toggle ? \"Light\" : 'Dark'}</button>\n      <input  className={` ${toggle ? \"dark\" : 'light'  }`}  onChange={(e)=>{ place=e.target.value;dispatch( updatePlace(e.target.value) ) }} ></input>\n      <button  className={` ${toggle ? \"dark\" : 'light'  }`} onClick={ ()=>{dispatch( updatePlaceData(place)  )}}>Submit</button></div>\n      <Cart/>\n    </div>\n  );\n}\n\nexport default App;\n"," function updatePlace(place)\r\n{  \r\n   return {\r\n       type : \"UPDATE_PALACE\",\r\n       payload : place,\r\n   };\r\n}\r\nfunction updatePlaceData(placeName) {\r\n    \r\n    return (dispatch)=>{\r\n        fetch(`https://api.weatherapi.com/v1/current.json?key=c7ecd36dd16a43828e0102855212907&q=${placeName}`)\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n    dispatch({\r\n        type : \"UPDATE_PLACE_DATA\",\r\n        payload : data,\r\n    })}\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nfunction toggleTheme() {\r\n    return {\r\n        type : \"TOGGLE_THEME\",\r\n    }\r\n    \r\n}\r\n\r\nexport {updatePlace , updatePlaceData , toggleTheme};","\r\n\r\nfunction placeReducer(state='mumbai' , action)\r\n{ \r\n    if (action.type === \"UPDATE_PLACE\")\r\n    {\r\n        return action.payload;\r\n    }\r\n    else\r\n    return state;\r\n}\r\nexport default placeReducer;","function placeDataReducer(state={} , action)\r\n{   \r\n    if( action.type === \"UPDATE_PLACE_DATA\" )\r\n     return action.payload;\r\n    return state;\r\n}\r\nexport default placeDataReducer;","function toggleThemeReducer(state = false, action) {\r\n    console.log('theme=',state);\r\n    if (action.type === 'TOGGLE_THEME')\r\n    {\r\n        return ! state;\r\n    }\r\n    return state;\r\n    \r\n}\r\nexport default toggleThemeReducer;","import placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport toggleThemeReducer from './toggleThemeReducer'\r\nimport { combineReducers } from \"redux\";\r\nconst rootReducer = combineReducers({\r\n    place : placeReducer,\r\n    placeData : placeDataReducer ,\r\n    theme : toggleThemeReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore , applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport thunk from 'redux-thunk' ;\r\nconst store = createStore(rootReducer , applyMiddleware(thunk));\r\nexport default store ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      \n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}